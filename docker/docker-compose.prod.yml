# This script configures a multi-container setup to serve MPC Autofill and all
# its dependencies. Simply navigate to the base directory and run
# "docker-compose up" to get started. Optionally, you can pass "-d" to detach
# all containers and their outputs to the background. By default, MPC Autofill
# is served at http://localhost:3000. You can adjust the port by copying .env.dist
# as a new file called .env and changing the value of FRONTEND_PORT.
# Many code templates and inspirations are taken from blog post:
# https://testdriven.io/blog/dockerizing-django-with-postgres-gunicorn-and-nginx/

# Run this file with compose by specifying this file and the base compose file:
# docker compose -f docker-compose.prod.yml -f docker-compose.yml up
version: "3.4"

services:
  # Unicorn serving Django
  django:
    image: mpcautofill_django
    container_name: mpcautofill_django
    build:
      context: ..
      dockerfile: ./docker/django/Dockerfile
    expose:
      - 8000
    depends_on:
      - postgres
      - elasticsearch
    environment:
      # Do not change these variables
      - DATABASE_HOST=postgres
      - ELASTICSEARCH_HOST=elasticsearch
      - DEBUG=False
      - ALLOWED_HOSTS=django-api
      # These variables may be customised
      - GAME=MTG

  # nginx serving the frontend
  nginx:
    image: mpcautofill_nginx
    container_name: mpcautofill_nginx
    build:
      context: ..
      dockerfile: ./docker/nginx/Dockerfile
    depends_on:
      - django
    ports:
      - "80:80" # TODO: support ports other than 80

  postgres:
    expose:
      - 5432
    ports: []
  elasticsearch:
    expose:
      - 5432
    ports: []
